DEVICE:53
;MODULE:IAI_CON_PUSH
;MODULE_TYPE:1
;SCRIPT_TYPE:
;SupportMacro
;
;----------------------------------------------
;Macro Name 	: 	IAI_CON_PUSH
;Macro Type	:	Self Holding
;Function	:	IAI CON系直値押し付け動作ﾏｸﾛ
;----------------------------------------------
;引数：
;	P0  =	各ﾊﾟﾗﾒｰﾀﾃﾞｰﾀ格納DM先頭		DM番号で指定	P0 = Leading Address of each data storage
;			P0,P0+1		：目標位置							P0,P0+1		：Position data
;			P0+2,P0+3	：位置決め完了幅					P0+2,P0+3	：COIN data
;			P0+4		：移動速度							P0+4		：Velocity data
;	P8	=	押付け電流制限値格納DM先頭	DM番号で指定	P8 = Leading Address of Pressing Current limit value data storage
;	V2  =   押付け方向設定 [0:減算方向 , 1:加算方向]   	V2 = Pressing Direction value [0:reducing positioning , 1:adding positioning ]
;	P3	=	RB入力先頭番地				DM番号で指定	P3 = Input Leading Address for RB
;	P4  =	RB出力先頭番地				DM番号で指定	P4 = Output Leading Address for RB
;	P5  =   完了フラグ
;	P6  =   完了コード									P5 = Macro Complete Code
;			#20 	= 正常終了								#20 = No Error
;			#21 	= RB応答なし							#21 = Non Responce
;			#22 	= ｽﾃｰﾀｽ異常								#22 = Status Abnormal
;			#23 	= 押し付け空振り						#23 = Pressing miss
;			#1-16	= RBｱﾗｰﾑ(取説PIOｱﾗｰﾑｺｰﾄﾞ参照)			#1-16 = RB Alarm(Refer the Controller Manual)
;	P7  =   非常停止ﾌﾗｸﾞ                            	P7 = Emergency Stop Flag
;	V1  =   ﾀｲﾑｱｳﾄ設定                              	V1 = Time out Value
;機能：
;	ACON/PCON/SCON用ﾊｰﾌ直値押付け移動指令ﾏｸﾛ/ Robot Move Macro for Half Numerical Pussing Move Mode
;初期化　/ Initialize
LD @CR2008
DW K0 P6                 ; C_CODE
CON
ZRES @M2 @M15            ; 速度設定
CON
SET @M0
;RBｽﾃｰﾀｽﾓﾆﾀｰ / Status Monitoring
BLD P3:#7 K3             ; RB_IN
AND CR2003               ; 常時OFF
OUT @M14                 ; ｱﾗｰﾑ発生
BLD P3:#7 K1             ; RB_IN
BAND P3:#7 K4            ; RB_IN
BANB P3:#7 K8            ; RB_IN
BAND P3:#7 K14           ; RB_IN
BANB P3:#7 K15           ; RB_IN
OUT @M1                  ; RB移動許可
;ｱﾗｰﾑ発生
LDP @M14                 ; ｱﾗｰﾑ発生
MOV P3:#6 P6             ; RB_IN  C_CODE
ZRES @M0 @M15
CON
BRES P4:#7 K12           ; RB_OUT
CON
SET P5                   ; END_FLAG
;RB状態ﾁｪｯｸ /　Robot Status Check
STG @M0
MPS
LD @M1                   ; RB移動許可
BANB P3:#7 K2            ; RB_IN
ANL
JMP @M2                  ; 速度設定
MPP
ANB @M1                  ; RB移動許可
TMR @0 V1                ; TimeOut
CON
AND @T0
AND CR2003               ; 常時OFF
DW K22 P6                ; C_CODE
CON
JMP @M15
;P4.L   = P0.L         '目標位置ﾃﾞｰﾀ
;P4.D:2 = P0.D:2       '位置決め完了幅
;P4.U:4 = P0.U:4       '速度ﾃﾞｰﾀ
;P4.U:5 = 30           '加速度0.3G固定
;P4.U:6 = P8.U         '押付け電流制限値
;IF (V2 = #0 ) THEN    '押付け移動方向
;  BRES(P4:7,#13)
;ELSE 
;  BSET(P4:7,#13)
;END IF
;BSET(P4:7,#12)        '押付け指定
;SET(@MR003)           '計算完了ﾌﾗｸﾞ
LD @M2                   ; 速度設定
NCJ K1000
;P4.L   = P0.L         '目標位置ﾃﾞｰﾀ
;
LD CR2002                ; 常時ON
MOV.L P0 P4              ; DATA_Adress  RB_OUT
;P4.D:2 = P0.D:2       '位置決め完了幅
;
LD CR2002                ; 常時ON
MOV.D P0:#2 P4:#2        ; DATA_Adress  RB_OUT
;P4.U:4 = P0.U:4       '速度ﾃﾞｰﾀ
;
LD CR2002                ; 常時ON
MOV P0:#4 P4:#4          ; DATA_Adress  RB_OUT
;P4.U:5 = 30           '加速度0.3G固定
;
LD CR2002                ; 常時ON
MOV K30 P4:#5            ; RB_OUT
;P4.U:6 = P8.U         '押付け電流制限値
;
LD CR2002                ; 常時ON
MOV P8 P4:#6             ; Current  RB_OUT
;IF (V2 = #0 ) THEN    '押付け移動方向
;
LD= V2 K0                ; Direct
NCJ K2000
;  BRES(P4:7,#13)
;
LD CR2002                ; 常時ON
BRES P4:#7 K13           ; RB_OUT
;ELSE 
;
LD CR2002                ; 常時ON
CJ K2001
LABEL K2000
;  BSET(P4:7,#13)
;
LD CR2002                ; 常時ON
BSET P4:#7 K13           ; RB_OUT
;END IF
;
LABEL K2001
;BSET(P4:7,#12)        '押付け指定
;
LD CR2002                ; 常時ON
BSET P4:#7 K12           ; RB_OUT
;SET(@MR003)           '計算完了ﾌﾗｸﾞ
LD CR2002                ; 常時ON
SET @M3                  ; ﾃﾞｰﾀ格納 完了
LABEL K1000
;
STG @M2                  ; 速度設定
AND @M3                  ; ﾃﾞｰﾀ格納 完了
TMS @1 K5
CON
AND @T1
BSET P4:#7 K0            ; RB_OUT
CON
RES @M3                  ; ﾃﾞｰﾀ格納 完了
CON
JMP @M4                  ; 移動開始
;動作開始 / Move start
STG @M4                  ; 移動開始
MPS
BANB P3:#7 K0            ; RB_IN
BRES P4:#7 K0            ; RB_OUT
CON
JMP @M5                  ; JOG完了へ
MPP
BAND P3:#7 K0            ; RB_IN
TMR @2 V1                ; TimeOut
CON
AND @T2
AND CR2003               ; 常時OFF
BRES P4:#7 K0            ; RB_OUT
CON
DW K21 P6                ; C_CODE
CON
JMP @M15
;移動完了確認 / Move end check
;                       PEND=ON : OK       PSFL=ON : NG
STG @M5                  ; JOG完了へ
MPS
BANB P3:#7 K2            ; RB_IN
MPS
BLD P3:#7 K0             ; RB_IN
BANB P3:#7 K5            ; RB_IN
ANL
TMH @4 K10
CON
AND @T4
JMP @M6
MPP
BLDB P3:#7 K0            ; RB_IN
BAND P3:#7 K5            ; RB_IN
ANL
TMH @5 K10
CON
AND @T5
JMP @M8
MPP
BLD P3:#7 K2             ; RB_IN
BAND P3:#7 K3            ; RB_IN
ANL
JMP @M7
STG @M6
DW K20 P6                ; C_CODE
CON
JMP @M15
STG @M7
BAND P3:#7 K0            ; RB_IN
BANB P3:#7 K2            ; RB_IN
BANB P3:#7 K3            ; RB_IN
BAND P3:#7 K4            ; RB_IN
TMH @6 K10
CON
AND @T6
JMP @M8
STG @M8
DW K23 P6                ; C_CODE
CON
JMP @M15
STG @M15
BRES P4:#7 K12           ; RB_OUT
CON
BRES P4:#7 K13           ; RB_OUT
CON
SET P5                   ; END_FLAG
CON
ENDS
;終了処理
LD P7                    ; EMG_FLAG
BRES P4:#7 K12           ; RB_OUT
CON
BRES P4:#7 K13           ; RB_OUT
CON
ZRES @M0 @M15
LD P5                    ; END_FLAG
BANB P4:#7 K12           ; RB_OUT
OR P7                    ; EMG_FLAG
MEND
END
ENDH
