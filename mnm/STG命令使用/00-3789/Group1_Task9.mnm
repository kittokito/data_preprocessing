DEVICE:53
;MODULE:Group1_Task9
;MODULE_TYPE:0
;SCRIPT_TYPE:
;OneSystem Main-Module
;
;-----------------------------------------
;ModuleName	:	Group1_Task9
;ModuleType	:	Main Module
;Line		:	
;Cell		:	
;Function	:	
;-----------------------------------------
;<<Task LocalDevice>>
;/*項目			/*割付ｴﾘｱ				/*備考
;---------------------------------------------------------------------			
;Emergency		@MR000〜@MR015			Emergency処理時RESET禁止ｴﾘｱ
;Free			@MR100〜@MR915			ﾕｰｻﾞｰﾌﾘｰｴﾘｱ
;HOME			@MR1000〜@MR1515		HOME動作時使用ｴﾘｱ
;MAINTENANCE		@MR2000〜@MR2915		MAINTE動作時使用ｴﾘｱ
;AUTO(Main1)		@MR3000〜@MR3915		AUTO(Main1)動作時使用ｴﾘｱ
;	(Main2)		@MR4000〜@MR4915		AUTO(Main2)動作時使用ｴﾘｱ
;SubRoutine		@MR4500〜@MR6415		ｻﾌﾞﾙｰﾁﾝ共通動作使用ｴﾘｱ
;----------------------------------------------------------------------
;<h1/>Device_Init/ﾃﾞﾊﾞｲｽ初期化
;[内容]
;・非常停止、優先ｴﾗｰ発生時に初期化したいﾃﾞﾊﾞｲｽを指定して下さい
;※本Taskで使用するﾛｰｶﾙﾃﾞﾊﾞｲｽなど
;※STG〜JMPにて使用しているﾃﾞﾊﾞｲｽは必須
LDP R46104               ; _非常停止中　ﾓｰﾄﾞﾌﾗｸﾞ
ZRES @MR100 @MR5715      ; Task9 ERROR  Pause処理2_Sub_END
;<h1/>Task_Monitor/ﾀｽｸﾓﾆﾀｰ
LD CR2002                ; 常時ON
FLIK #50 #50 @MR000
LD= DM60000 #9           ; TaskNo /ERROR_DISP
AND R46208               ; _Group1　ｴﾗｰ発生中
OUT @MR001               ; TASK0 ERROR
;ON STG Main1
;TYPE EM672.U,EM673.U,@MR000.U,@MR3000.U
;
;FOR EM672 = EM672 TO 160 STEP 16
;	IF @MR3000:EM672 <> 0 THEN
;		BREAK
;	END IF	
;NEXT
;	
;IF EM672 < 160 THEN
;	EM673 = (EM672 / 16) * 100 + DMX(@MR3000:EM672) + #3000
;END IF		
;		
;EM672 = EM672 + 16		
;IF EM672 > 160 THEN		
;	EM672 = 0		
;END IF
LDP @MR000
NCJ #1000
;TYPE EM672.U,EM673.U,@MR000.U,@MR3000.U
;
;FOR EM672 = EM672 TO 160 STEP 16
;
LD CR2002                ; 常時ON
MOV EM672 EM672          ; Task9 Main1@MR  Task9 Main1@MR
LABEL #2000
LD> EM672 #160           ; Task9 Main1@MR
CJ #2001
;	IF @MR3000:EM672 <> 0 THEN
;
LD CR2002                ; 常時ON
LDA EM672                ; Task9 Main1@MR
CON
EXT
CON
STA.L Z12
LD<> @MR3000:Z12 #0      ; AUTO Main1
NCJ #2002
;		BREAK
;
LD CR2002                ; 常時ON
CJ #2003
;	END IF	
;
LABEL #2002
;NEXT
;
LD CR2002                ; 常時ON
LDA EM672                ; Task9 Main1@MR
CON
ADD #16
CON
STA EM672                ; Task9 Main1@MR
LDB CR2009               ; 演算結果が負
CJ #2000
LABEL #2003
LABEL #2001
;IF EM672 < 160 THEN
;
LD< EM672 #160           ; Task9 Main1@MR
NCJ #2004
;	EM673 = (EM672 / 16) * 100 + DMX(@MR3000:EM672) + #3000
;
LD CR2002                ; 常時ON
LDA EM672                ; Task9 Main1@MR
CON
EXT
CON
STA.L Z12
CON
LDA @MR3000:Z12          ; AUTO Main1
CON
DMX
CON
STA @VM0
CON
LDA EM672                ; Task9 Main1@MR
CON
EXT
CON
EXT.L
CON
DIV.L +16
CON
MUL.L +100
CON
STA.L @VM1
CON
LDA @VM0
CON
EXT
CON
ADD.L @VM1
CON
ADD.L +3000
CON
STA EM673                ; Task9 Main1@MR
;END IF		
;
LABEL #2004
;EM672 = EM672 + 16		
;
LD CR2002                ; 常時ON
LDA EM672                ; Task9 Main1@MR
CON
EXT
CON
ADD.L +16
CON
STA EM672                ; Task9 Main1@MR
;IF EM672 > 160 THEN		
;
LD> EM672 #160           ; Task9 Main1@MR
NCJ #2005
;	EM672 = 0		
;
LD CR2002                ; 常時ON
MOV #0 EM672             ; Task9 Main1@MR
;END IF
LABEL #2005
LABEL #1000
;
;ON STG Main2
;TYPE EM674.U,EM675.U,@MR4000.U
;
;FOR EM674 = EM674 TO 80 STEP 16
;	IF @MR4000:EM674 <> 0 THEN
;		BREAK
;	END IF	
;NEXT	
;
;IF EM674 < 80 THEN
;	EM675 = (EM674 / 16) * 100 + DMX(@MR4000:EM674) + #4000
;END IF
;
;EM674 = EM674 + 16		
;
;IF EM674 > 80 THEN
;	EM674 = 0	
;END IF
LDP @MR000
NCJ #1001
;TYPE EM674.U,EM675.U,@MR4000.U
;
;FOR EM674 = EM674 TO 80 STEP 16
;
LD CR2002                ; 常時ON
MOV EM674 EM674          ; Task9 Main2@MR  Task9 Main2@MR
LABEL #2006
LD> EM674 #80            ; Task9 Main2@MR
CJ #2007
;	IF @MR4000:EM674 <> 0 THEN
;
LD CR2002                ; 常時ON
LDA EM674                ; Task9 Main2@MR
CON
EXT
CON
STA.L Z12
LD<> @MR4000:Z12 #0      ; AUTO Main2
NCJ #2008
;		BREAK
;
LD CR2002                ; 常時ON
CJ #2009
;	END IF	
;
LABEL #2008
;NEXT	
;
LD CR2002                ; 常時ON
LDA EM674                ; Task9 Main2@MR
CON
ADD #16
CON
STA EM674                ; Task9 Main2@MR
LDB CR2009               ; 演算結果が負
CJ #2006
LABEL #2009
LABEL #2007
;IF EM674 < 80 THEN
;
LD< EM674 #80            ; Task9 Main2@MR
NCJ #2010
;	EM675 = (EM674 / 16) * 100 + DMX(@MR4000:EM674) + #4000
;
LD CR2002                ; 常時ON
LDA EM674                ; Task9 Main2@MR
CON
EXT
CON
STA.L Z12
CON
LDA @MR4000:Z12          ; AUTO Main2
CON
DMX
CON
STA @VM3
CON
LDA EM674                ; Task9 Main2@MR
CON
EXT
CON
EXT.L
CON
DIV.L +16
CON
MUL.L +100
CON
STA.L @VM4
CON
LDA @VM3
CON
EXT
CON
ADD.L @VM4
CON
ADD.L +4000
CON
STA EM675                ; Task9 Main2@MR
;END IF
;
LABEL #2010
;EM674 = EM674 + 16		
;
LD CR2002                ; 常時ON
LDA EM674                ; Task9 Main2@MR
CON
EXT
CON
ADD.L +16
CON
STA EM674                ; Task9 Main2@MR
;IF EM674 > 80 THEN
;
LD> EM674 #80            ; Task9 Main2@MR
NCJ #2011
;	EM674 = 0	
;
LD CR2002                ; 常時ON
MOV #0 EM674             ; Task9 Main2@MR
;END IF
LABEL #2011
LABEL #1001
;
;ON STG SubRoutine
;TYPE EM676.U,EM677.U,@MR4500.U
;	
;FOR EM676 = EM676 TO 320 STEP 16
;	IF @MR4500:EM676 <> 0 THEN
;		BREAK
;	END IF	
;NEXT
;		
;IF EM676 < 320 THEN
;	EM677 = (EM676 / 16) * 100 + DMX(@MR4500:EM676) + #4500
;END IF
;		
;EM676 = EM676 + 16	
;
;IF EM676 > 320 THEN
;   EM676 = 0	
;END IF
LDP @MR000
NCJ #1002
;TYPE EM676.U,EM677.U,@MR4500.U
;
;FOR EM676 = EM676 TO 320 STEP 16
;
LD CR2002                ; 常時ON
MOV EM676 EM676          ; Task9 Sub@MR  Task9 Sub@MR
LABEL #2012
LD> EM676 #320           ; Task9 Sub@MR
CJ #2013
;	IF @MR4500:EM676 <> 0 THEN
;
LD CR2002                ; 常時ON
LDA EM676                ; Task9 Sub@MR
CON
EXT
CON
STA.L Z12
LD<> @MR4500:Z12 #0
NCJ #2014
;		BREAK
;
LD CR2002                ; 常時ON
CJ #2015
;	END IF	
;
LABEL #2014
;NEXT
;
LD CR2002                ; 常時ON
LDA EM676                ; Task9 Sub@MR
CON
ADD #16
CON
STA EM676                ; Task9 Sub@MR
LDB CR2009               ; 演算結果が負
CJ #2012
LABEL #2015
LABEL #2013
;IF EM676 < 320 THEN
;
LD< EM676 #320           ; Task9 Sub@MR
NCJ #2016
;	EM677 = (EM676 / 16) * 100 + DMX(@MR4500:EM676) + #4500
;
LD CR2002                ; 常時ON
LDA EM676                ; Task9 Sub@MR
CON
EXT
CON
STA.L Z12
CON
LDA @MR4500:Z12
CON
DMX
CON
STA @VM6
CON
LDA EM676                ; Task9 Sub@MR
CON
EXT
CON
EXT.L
CON
DIV.L +16
CON
MUL.L +100
CON
STA.L @VM7
CON
LDA @VM6
CON
EXT
CON
ADD.L @VM7
CON
ADD.L +4500
CON
STA EM677                ; Task9 Sub@MR
;END IF
;
LABEL #2016
;EM676 = EM676 + 16	
;
LD CR2002                ; 常時ON
LDA EM676                ; Task9 Sub@MR
CON
EXT
CON
ADD.L +16
CON
STA EM676                ; Task9 Sub@MR
;IF EM676 > 320 THEN
;
LD> EM676 #320           ; Task9 Sub@MR
NCJ #2017
;   EM676 = 0	
;
LD CR2002                ; 常時ON
MOV #0 EM676             ; Task9 Sub@MR
;END IF
LABEL #2017
LABEL #1002
;
;<h1/>Task_Init/ﾀｽｸ初期化
;[本STG内容]
;・本Task起動時に必要な初期化処理を記述して下さい
;・起動Taskの全Init処理終了後、Task_StartのSTGが起動します
STG LR809                ; _Grp1_Task9_Init.STG
ENDS
;<h1/>Task_Start/ﾀｽｸ開始
;[本STG内容]
;・Task起動後、以下運転ﾓｰﾄﾞに従い、各STGにJMPします
;【HOME】	→	LR5200
;【AUTO】	→	LR5400
;【MAINTE】	→	LR5600
;・本STGは追記、修正不要です
STG LR409                ; _Grp1_Task9_Start.STG
MPS
AND R46101               ; _原点復帰中　ﾓｰﾄﾞﾌﾗｸﾞ
JMP LR5209               ; _Grp1_Task9_HOME.STG
MRD
AND R46100               ; _自動運転中　ﾓｰﾄﾞﾌﾗｸﾞ
JMP LR5409               ; _Grp1_Task9_AUTO.STG
MPP
AND R46102               ; _ﾒﾝﾃﾅﾝｽ運転中　ﾓｰﾄﾞﾌﾗｸﾞ
JMP LR5609               ; _Grp1_Task9_MAINTE.STG
;<h1/>Task_Finish/ﾀｽｸ終了
;[本STG内容]
;・各Taskの終了STGになります
;・運転ﾓｰﾄﾞに係わらず終了時は本STGを経由して終了して下さい
;・本STGは追記、修正不要です
STG LR609                ; _Grp1_Task9_Fin.STG
RES R41009               ; _Grp1_Task9_起動中ﾌﾗｸﾞ
CON
ENDS
;<h1/>HOME/原点復帰
;[本STG内容]
;・STG @MR1000の続きから各Taskの原点復帰動作を記述する
;・動作終了時は@MR1515にJMPする事
STG LR5209               ; _Grp1_Task9_HOME.STG
JMP @MR1000              ; HOME
STG @MR1000              ; HOME
@RES R42609              ; _Grp1_Task9_ﾎﾟｰｽﾞ許可
CON
SET @MR1002              ; HOME中
CON
JMP @MR1515              ; HOME END
STG @MR1515              ; HOME END
MPS
LDB R44200               ; _Grp1 ﾎﾟｰｽﾞ要求
ANB @MR001               ; TASK0 ERROR
ANL
RES @MR1002              ; HOME中
CON
JMP LR609                ; _Grp1_Task9_Fin.STG
MPP
AND R44200               ; _Grp1 ﾎﾟｰｽﾞ要求
SET @MR1900              ; Main1 HALT許可
;<h1/>AUTO/自動動作
STG LR5409               ; _Grp1_Task9_AUTO.STG
JMP @MR3000              ; AUTO Main1
;<h1/>Auto-Main1/Autoﾒｲﾝﾙｰﾁﾝ1
;[本STG内容]
;・各TaskのAUTO動作を記述して下さい
;・動作ﾓｰﾄﾞは「AUTOAC」に格納されています(1〜32)
;・@MR3000:AUTO_Main1開始、@MR3001:AUTO_Main1完了、@MR3002:AUTO_Main1動作中
STG @MR3000              ; AUTO Main1
MPS
LD= DM5010 #1            ; _AUTO動作番号
AND B1000                ; ★自動ﾃﾞﾊﾞｯｸ用接点
ANL
JMP @MR3003
MPP
AND= DM5010 #2           ; _AUTO動作番号
JMP @MR3915              ; AUTO END
STG @MR3003
MPS
LDB R44200               ; _Grp1 ﾎﾟｰｽﾞ要求
AND R46106               ; _定停止移行中
ANL
JMP @MR3004
MPP
AND R44200               ; _Grp1 ﾎﾟｰｽﾞ要求
SET @MR1900              ; Main1 HALT許可
STG @MR3004
JMP @MR3900
;Auto終了処理
STG @MR3900
AND @MR4001              ; Main2 END
RES @MR4001              ; Main2 END
CON
JMP @MR3915              ; AUTO END
STG @MR3915              ; AUTO END
MPS
LDB R44200               ; _Grp1 ﾎﾟｰｽﾞ要求
ANB @MR001               ; TASK0 ERROR
ANL
JMP LR609                ; _Grp1_Task9_Fin.STG
MPP
AND R44200               ; _Grp1 ﾎﾟｰｽﾞ要求
SET @MR1900              ; Main1 HALT許可
;<h1/>Auto-Main2/Autoﾒｲﾝﾙｰﾁﾝ2
;[本STG内容]
;・@MR4000の起動はMain1にて行う事
;・@MR4000:AUTO_Main2開始、@MR4001:AUTO_Main2完了、@MR4002:AUTO_Main2動作中
STG @MR4000              ; AUTO Main2
SET @MR4002              ; Main2 Busy
CON
JMP @MR4003
STG @MR4003
MPS
LDB R44200               ; _Grp1 ﾎﾟｰｽﾞ要求
AND R46106               ; _定停止移行中
ANL
JMP @MR4914              ; Main2 ENDへ
MPP
AND R44200               ; _Grp1 ﾎﾟｰｽﾞ要求
SET @MR1901              ; Main2 HALT許可
;
STG @MR4914              ; Main2 ENDへ
JMP @MR4915              ; Main2 END
STG @MR4915              ; Main2 END
SET @MR4001              ; Main2 END
CON
RES @MR4002              ; Main2 Busy
CON
ENDS
;<h1/>MAINTE/ﾒﾝﾃﾅﾝｽ動作
;[本STG内容]
;・各TaskのMAINTE動作を記述して下さい
;・動作ﾓｰﾄﾞは「MAINTEAC*」に格納されています(1〜32)
;・動作終了時は@MR2915にJMPして下さい
STG LR5609               ; _Grp1_Task9_MAINTE.STG
JMP @MR2000              ; Mainte
STG @MR2000              ; Mainte
SET @MR2002              ; Mainte中
CON
JMP @MR2003
STG @MR2003
MPS
ANB R44200               ; _Grp1 ﾎﾟｰｽﾞ要求
MPS
AND= DM4110 #10          ; _Group1　ﾒﾝﾃ動作番号
JMP @MR2100              ; RB6 Pos.1
MRD
AND= DM4110 #26          ; _Group1　ﾒﾝﾃ動作番号
@DW #2150 DM3008         ; _MainTP　切替ﾍﾟｰｼﾞNo
CON
LDP R44915               ; Teaching End
ORP R45014               ; Teaching End(書込無)
ANL
JMP @MR2110
MRD
LD= DM4110 #25           ; _Group1　ﾒﾝﾃ動作番号
ANF R45015               ; 単動終了
ANL
JMP @MR2110
MPP
AND R47800               ; _Group1　ﾒﾝﾃ動作定停止移行中
JMP @MR2110
MPP
AND R44200               ; _Grp1 ﾎﾟｰｽﾞ要求
SET @MR1900              ; Main1 HALT許可
;STEP　通常動作
STG @MR2100              ; RB6 Pos.1
SET @MR2102              ; STEP
CON
JMP @MR2103
STG @MR2103
MPS
MSTRT SELECT_POST #1 #0 #0 @MR1800;selectEND
MPP
AND @MR1800              ; selectEND
JMP @MR2105
STG @MR2105
SET R47600               ; _Group1　動作区切り開始
CON
AND R47608               ; _Group1　動作区切り完了
SET @MR3204
CON
SET @MR4000              ; AUTO Main2
CON
JMP @MR2106
STG @MR2106
AND @MR2107              ; STEP　END
ANB @MR4002              ; Main2 Busy
RES @MR2102              ; STEP
CON
JMP @MR2108
;Maintenance　終了
STG @MR2108
ANB R39104               ; SELECT_Y_N Interlock
SET R39104               ; SELECT_Y_N Interlock
CON
DW #7 @DM21              ; ScreenNo /SELECT_Y_N
CON
DW #0 @DM22              ; Bz_Use /SELECT_Y_N
CON
SET @MR300               ; Task0 SELECT_Y_N
CON
JMP @MR2109
STG @MR2109
AND @MR301               ; Task0 Y/N END
RES @MR301               ; Task0 Y/N END
CON
RES R39104               ; SELECT_Y_N Interlock
CON
MPS
AND @MR306               ; Task0 Y/N
JMP @MR2000              ; Mainte
MPP
ANB @MR306               ; Task0 Y/N
JMP @MR2110
STG @MR2110
MCALL HOLD_REQUEST #1
JMP @MR2915              ; Mainte END
STG @MR2915              ; Mainte END
MPS
MCALL MODE_INDI #2
MPP
ANB @MR001               ; TASK0 ERROR
MPS
AND R44200               ; _Grp1 ﾎﾟｰｽﾞ要求
SET @MR1900              ; Main1 HALT許可
MPP
ANB R44200               ; _Grp1 ﾎﾟｰｽﾞ要求
RES @MR2002              ; Mainte中
CON
JMP LR609                ; _Grp1_Task9_Fin.STG
;<h1/>ERROR
;//*Error Sample
;[使用方法]
;・@DM1にERROR番号を代入
;・@DM2にSensor番号を代入(センサ無しエラーの場合は0)
;・@DM9に復帰SW番号(1〜9、0はSW無し)をdegit単位で4桁入力
;・Task0 ERROR SET(@MR100)でエラー処理開始
;・エラー復帰でTask0 ERROR END(@MR101)がON
;・押下復帰SW番号により左から対応した@MR105,@MR106,@MR107,@MR108のいずれかがON
;・上記ONが成立したらJMPするSTGに対応する処理を記述
;Error0を左側から1,2,3,4の番号に対応した復帰選択SWを出力する
;＠DM1のSW内容
;1:「ErrorReset」
;2:「再検出」
;3:「再検査」
;4:「動作継続」
;5:「定停止」
;6:「ﾜｰｸ除去」
;7:「電源断要求」
;8:「Retry」
;9:「再確認」
;Error Sample *//
;ｴﾗｰ処理 予備回路
LD MR19110               ; Task9 ｴﾗｰ予備6
ANB R39004               ; ｴﾗｰ中
SET R39004               ; ｴﾗｰ中
CON
ZRES MR19111 MR19112     ; SW1  SW2
CON
DW #3600 @DM9            ; ReturnSW /ERROR_DISP
CON
DW #0 @DM1               ; ErrorNo /ERROR_DISP
CON
DW #0 @DM2               ; SensorNo /ERROR_DISP
CON
SET @MR100               ; Task9 ERROR
CON
SET @MR505
STG @MR505
AND @MR101               ; Task9 ERROR_End
RES @MR101               ; Task9 ERROR_End
CON
RES R39004               ; ｴﾗｰ中
CON
RES MR19110              ; Task9 ｴﾗｰ予備6
CON
MPS
AND @MR105               ; SW1
SET MR19111              ; SW1
CON
ENDS
MPP
AND @MR106               ; SW2
SET MR19112              ; SW2
CON
ENDS
LD MR19200               ; Task9 ｴﾗｰ予備7
ANB R39004               ; ｴﾗｰ中
SET R39004               ; ｴﾗｰ中
CON
ZRES MR19201 MR19202     ; SW1  SW2
CON
DW #3600 @DM9            ; ReturnSW /ERROR_DISP
CON
DW #0 @DM1               ; ErrorNo /ERROR_DISP
CON
DW #0 @DM2               ; SensorNo /ERROR_DISP
CON
SET @MR100               ; Task9 ERROR
CON
SET @MR506
STG @MR506
AND @MR101               ; Task9 ERROR_End
RES @MR101               ; Task9 ERROR_End
CON
RES R39004               ; ｴﾗｰ中
CON
RES MR19200              ; Task9 ｴﾗｰ予備7
CON
MPS
AND @MR105               ; SW1
SET MR19201              ; SW1
CON
ENDS
MPP
AND @MR106               ; SW2
SET MR19202              ; SW2
CON
ENDS
LD MR19205               ; Task9 ｴﾗｰ予備8
ANB R39004               ; ｴﾗｰ中
SET R39004               ; ｴﾗｰ中
CON
ZRES MR19206 MR19207     ; SW1  SW2
CON
DW #3600 @DM9            ; ReturnSW /ERROR_DISP
CON
DW #0 @DM1               ; ErrorNo /ERROR_DISP
CON
DW #0 @DM2               ; SensorNo /ERROR_DISP
CON
SET @MR100               ; Task9 ERROR
CON
SET @MR507
STG @MR507
AND @MR101               ; Task9 ERROR_End
RES @MR101               ; Task9 ERROR_End
CON
RES R39004               ; ｴﾗｰ中
CON
RES MR19205              ; Task9 ｴﾗｰ予備8
CON
MPS
AND @MR105               ; SW1
SET MR19206              ; SW1
CON
ENDS
MPP
AND @MR106               ; SW2
SET MR19207              ; SW2
CON
ENDS
LD MR19210               ; Task9 ｴﾗｰ予備9
ANB R39004               ; ｴﾗｰ中
SET R39004               ; ｴﾗｰ中
CON
ZRES MR19211 MR19212     ; SW1  SW2
CON
DW #3600 @DM9            ; ReturnSW /ERROR_DISP
CON
DW #0 @DM1               ; ErrorNo /ERROR_DISP
CON
DW #0 @DM2               ; SensorNo /ERROR_DISP
CON
SET @MR100               ; Task9 ERROR
CON
SET @MR508
STG @MR508
AND @MR101               ; Task9 ERROR_End
RES @MR101               ; Task9 ERROR_End
CON
RES R39004               ; ｴﾗｰ中
CON
RES MR19210              ; Task9 ｴﾗｰ予備9
CON
MPS
AND @MR105               ; SW1
SET MR19211              ; SW1
CON
ENDS
MPP
AND @MR106               ; SW2
SET MR19212              ; SW2
CON
ENDS
LD MR19300               ; Task9 ｴﾗｰ予備10
ANB R39004               ; ｴﾗｰ中
SET R39004               ; ｴﾗｰ中
CON
ZRES MR19301 MR19302     ; SW1  SW2
CON
DW #3600 @DM9            ; ReturnSW /ERROR_DISP
CON
DW #0 @DM1               ; ErrorNo /ERROR_DISP
CON
DW #0 @DM2               ; SensorNo /ERROR_DISP
CON
SET @MR100               ; Task9 ERROR
CON
SET @MR509
STG @MR509
AND @MR101               ; Task9 ERROR_End
RES @MR101               ; Task9 ERROR_End
CON
RES R39004               ; ｴﾗｰ中
CON
RES MR19300              ; Task9 ｴﾗｰ予備10
CON
MPS
AND @MR105               ; SW1
SET MR19301              ; SW1
CON
ENDS
MPP
AND @MR106               ; SW2
SET MR19302              ; SW2
CON
ENDS
;MyTask Error Process Substance/エラー処理実体
STG @MR100               ; Task9 ERROR
ANB R39002               ; ERROR_DISP Busy
MPS
ZRES @MR105 @MR108       ; SW1  SW4
CON
LDA @DM9                 ; ReturnSW /ERROR_DISP
CON
TBCD
CON
STA @DM10
CON
DISN @DM10 @DM3 #4
MRD
DW #9 @DM0               ; TaskNo /ERROR_DISP
CON
BMOV @DM0 DM60000 #7     ; TaskNo /ERROR_DISP  TaskNo /ERROR_DISP
MPP
SET R39000               ; ERROR_DISP Start
CON
SET @MR102               ; Task9 ERROR Busy
CON
JMP @MR103
STG @MR103
AND R39002               ; ERROR_DISP Busy
AND= DM60008 @DM1        ; ReturnNo /ERROR_DISP  ErrorNo /ERROR_DISP
MPS
AND= DM60007 @DM6        ; ReturnSW /ERROR_DISP
SET @MR105               ; SW1
CON
JMP @MR104
MRD
AND= DM60007 @DM5        ; ReturnSW /ERROR_DISP
SET @MR106               ; SW2
CON
JMP @MR104
MRD
AND= DM60007 @DM4        ; ReturnSW /ERROR_DISP
SET @MR107               ; SW3
CON
JMP @MR104
MPP
AND= DM60007 @DM3        ; ReturnSW /ERROR_DISP
SET @MR108               ; SW4
CON
JMP @MR104
STG @MR104
ANB R39002               ; ERROR_DISP Busy
RES @MR102               ; Task9 ERROR Busy
CON
SET @MR101               ; Task9 ERROR_End
CON
ENDS
;<h1/>SELECT_ACT
;//*Select_ACT Sample
;画面番号33をブザー有りで選択SW番号を左から#5,#10,#0(無し),#34の並びで表示する
STG @MR4104
ANB R39204               ; SELECT_ACT Interlock
SET R39204               ; SELECT_ACT Interlock
CON
MPS
DW #33 @DM31             ; ScreenNo /SELECT_ACT
CON
DW #1 @DM32              ; SW1_No /SELECT_ACT
CON
DW #5 @DM33              ; SW2_No /SELECT_ACT
CON
DW #10 @DM34             ; SW3_No /SELECT_ACT
CON
DW #0 @DM35              ; SW4_No /SELECT_ACT
CON
DW #34 @DM36             ; Bz_Use /SELECT_ACT
MPP
SET @MR200               ; Task9 SELECT_ACT
CON
JMP @MR4105
STG @MR4105
AND @MR201               ; Task9 SEL_ACT END
RES @MR201               ; Task9 SEL_ACT END
CON
RES R39204               ; SELECT_ACT Interlock
CON
MPS
AND @MR205               ; SW1
JMP @MR4106
MRD
AND @MR206               ; SW2
JMP @MR4107
MRD
AND @MR207               ; SW3
JMP @MR4108
MPP
AND @MR208               ; SW4
JMP @MR4109
;Select_ACT Sample *//
;MyTask Select_ACT Process Substance/SELECT_ACT処理実体
STG @MR200               ; Task9 SELECT_ACT
ANB R39202               ; SELECT_ACT Busy
MPS
ZRES @MR205 @MR208       ; SW1  SW4
CON
DW #9 @DM30              ; TaskNo /SELECT_ACT
CON
BMOV @DM30 DM60030 #7    ; TaskNo /SELECT_ACT  TaskNo /SELECT_ACT
MPP
SET R39200               ; SELECT_ACT Start
CON
SET @MR202               ; Task9 SEL_ACT Busy
CON
JMP @MR203
STG @MR203
AND R39202               ; SELECT_ACT Busy
AND<> DM60037 #0         ; SelectSW /SELECT_ACT
MPS
AND= DM60037 #1          ; SelectSW /SELECT_ACT
SET @MR205               ; SW1
CON
JMP @MR204
MRD
AND= DM60037 #2          ; SelectSW /SELECT_ACT
SET @MR206               ; SW2
CON
JMP @MR204
MRD
AND= DM60037 #3          ; SelectSW /SELECT_ACT
SET @MR207               ; SW3
CON
JMP @MR204
MPP
AND= DM60037 #4          ; SelectSW /SELECT_ACT
SET @MR208               ; SW4
CON
JMP @MR204
STG @MR204
ANB R39202               ; SELECT_ACT Busy
RES @MR202               ; Task9 SEL_ACT Busy
CON
SET @MR201               ; Task9 SEL_ACT END
CON
ENDS
;<h1/>SELECT_Y_N
;//*Select_Y_N Sample
STG @MR4203
ANB R39104               ; SELECT_Y_N Interlock
SET R39104               ; SELECT_Y_N Interlock
CON
DW #7 @DM21              ; ScreenNo /SELECT_Y_N
CON
DW #0 @DM22              ; Bz_Use /SELECT_Y_N
CON
SET @MR300               ; Task0 SELECT_Y_N
CON
JMP @MR4204
STG @MR4204
AND @MR301               ; Task0 Y/N END
RES @MR301               ; Task0 Y/N END
CON
RES R39104               ; SELECT_Y_N Interlock
CON
MPS
AND @MR306               ; Task0 Y/N
JMP @MR4205
MPP
ANB @MR306               ; Task0 Y/N
JMP @MR4206
;*Select_Y_N Sample//
;MyTask Select_Y_N Process Substance/SELECT_Y_N処理実体
STG @MR300               ; Task0 SELECT_Y_N
ANB R39102               ; SELECT_Y_N Busy
MPS
ZRES @MR306 @MR307       ; Task0 Y/N
CON
DW #9 @DM20              ; TaskNo /SELECT_Y_N
CON
BMOV @DM20 DM60020 #3    ; TaskNo /SELECT_Y_N  TaskNo /SELECT_Y_N
MPP
SET R39100               ; SELECT_Y_N Start
CON
SET @MR302               ; Task9 Y_N Busy
CON
JMP @MR303
STG @MR303
AND R39102               ; SELECT_Y_N Busy
MPS
AND= DM60023 #1          ; Y_N /SELECT_Y_N
SET @MR306               ; Task0 Y/N
CON
JMP @MR304
MPP
AND= DM60023 #2          ; Y_N /SELECT_Y_N
RES @MR306               ; Task0 Y/N
CON
JMP @MR304
STG @MR304
ANB R39102               ; SELECT_Y_N Busy
RES @MR302               ; Task9 Y_N Busy
CON
SET @MR301               ; Task0 Y/N END
CON
ENDS
;<h1/>TIMEUP_ERROR
;//*TIMEUP_ERROR Sample
;サンプルセンサ:MR5000=ON AND MR5001 = OFF のいずれかが5sタイムアップしたらTIMEUP_ERROR出力
;エラー復帰後、再度センサ確認
STG @MR4208
MPS
LD MR5000                ; ﾎﾙﾀﾞｻﾌﾞ反転移載PP ﾊﾝﾄﾞ上流 閉限_
ANB MR5001               ; ﾎﾙﾀﾞｻﾌﾞ反転移載PP ﾊﾝﾄﾞ上流 開限_
ANL
JMP @MR4215
MPP
LDB MR5000               ; ﾎﾙﾀﾞｻﾌﾞ反転移載PP ﾊﾝﾄﾞ上流 閉限_
OR MR5001                ; ﾎﾙﾀﾞｻﾌﾞ反転移載PP ﾊﾝﾄﾞ上流 開限_
ANL
TMR @0 #50
CON
AND @T0
JMP @MR4209
STG @MR4209
ANB R39304               ; TIMEUP_ERR Interlock
SET R39304               ; TIMEUP_ERR Interlock
CON
DW #16 @DM41             ; SensorNo /TIMEUP_ERR
CON
SET @MR400               ; Task9 TIMEUP_ERR
CON
JMP @MR4210
STG @MR4210
AND @MR401               ; Task9 TIMEUP_END
RES R39304               ; TIMEUP_ERR Interlock
CON
RES @MR401               ; Task9 TIMEUP_END
CON
JMP @MR4208
;TIMEUP_ERROR Sample *//
;MyTask TIMEUP_ERROR Process Substance/TIMEUP_ERROR処理実体
STG @MR400               ; Task9 TIMEUP_ERR
ANB R39302               ; TIMEUP_ERR Busy
MPS
DW #9 @DM40              ; TaskNo /TIMEUP_ERR
CON
BMOV @DM40 DM60040 #2    ; TaskNo /TIMEUP_ERR  TaskNo /TIMEUP_ERR
MPP
SET R39300               ; TIMEUP_ERR Start
CON
SET @MR402               ; Task9 TIMEUP Busy
CON
JMP @MR403
STG @MR403
AND R39302               ; TIMEUP_ERR Busy
JMP @MR404
STG @MR404
ANB R39302               ; TIMEUP_ERR Busy
RES @MR402               ; Task9 TIMEUP Busy
CON
SET @MR401               ; Task9 TIMEUP_END
CON
ENDS
;<h1/>HALT
LD R44200                ; _Grp1 ﾎﾟｰｽﾞ要求
AND @MR1900              ; Main1 HALT許可
LD @MR1901               ; Main2 HALT許可
ORB @MR4002              ; Main2 Busy
ANL
TMR @2 #2
CON
AND @T2
@SET R42609              ; _Grp1_Task9_ﾎﾟｰｽﾞ許可
LD R42609                ; _Grp1_Task9_ﾎﾟｰｽﾞ許可
RES @MR1900              ; Main1 HALT許可
CON
RES @MR1901              ; Main2 HALT許可
;<h1/>SubRoutines/ｻﾌﾞﾙｰﾁﾝ
;[記述方法]
;・ｻﾌﾞﾙｰﾁﾝは本ﾌﾞｯｸﾏｰｸから下に記述していって下さい
;・ｻﾌﾞﾙｰﾁﾝは必ずﾌﾞｯｸﾏｰｸを挿入して処理内容を明確にする事
;<h1/>01_5000_
STG @MR5000              ; Pause処理1_Sub_START
SET @MR5002              ; Pause処理_　Sub_実行中
CON
SET @MR1900              ; Main1 HALT許可
CON
JMP @MR5003
STG @MR5014
@SET @MR5001             ; Pause処理_　Sub_完了
CON
ANB @MR5001              ; Pause処理_　Sub_完了
RES @MR5002              ; Pause処理_　Sub_実行中
CON
ENDS
;<h1/>02_5100
STG @MR5100              ; ***_Sub
SET @MR5101              ; ***_Sub　実行中
CON
JMP @MR5102
STG @MR5102
JMP @MR5103
STG @MR5103
JMP @MR5104
STG @MR5104
JMP @MR5105
STG @MR5105
JMP @MR5106
STG @MR5106
JMP @MR5107
STG @MR5107
JMP @MR5108
STG @MR5108
JMP @MR5109
STG @MR5109
JMP @MR5110
STG @MR5110
JMP @MR5111
STG @MR5111
JMP @MR5112
STG @MR5112
JMP @MR5113
STG @MR5113
JMP @MR5114
STG @MR5114
@SET @MR5115             ; ***_Sub実行完了
CON
ANB @MR5115              ; ***_Sub実行完了
RES @MR5101              ; ***_Sub　実行中
CON
ENDS
;<h1/>03_5200
STG @MR5200              ; ***_Sub
SET @MR5201              ; ***_Sub　実行中
CON
JMP @MR5202
STG @MR5202
JMP @MR5203
STG @MR5203
JMP @MR5204
STG @MR5204
JMP @MR5205
STG @MR5205
JMP @MR5206
STG @MR5206
JMP @MR5207
STG @MR5207
JMP @MR5208
STG @MR5208
JMP @MR5209
STG @MR5209
JMP @MR5210
STG @MR5210
JMP @MR5211
STG @MR5211
JMP @MR5212
STG @MR5212
JMP @MR5213
STG @MR5213
JMP @MR5214
STG @MR5214
@SET @MR5215             ; ***_Sub実行完了
CON
ANB @MR5215              ; ***_Sub実行完了
RES @MR5201              ; ***_Sub　実行中
CON
ENDS
;<h1/>04_5300
STG @MR5300              ; ***_Sub
SET @MR5301              ; ***_Sub　実行中
CON
JMP @MR5302
STG @MR5302
JMP @MR5303
STG @MR5303
JMP @MR5304
STG @MR5304
JMP @MR5305
STG @MR5305
JMP @MR5306
STG @MR5306
JMP @MR5307
STG @MR5307
JMP @MR5308
STG @MR5308
JMP @MR5309
STG @MR5309
JMP @MR5310
STG @MR5310
JMP @MR5311
STG @MR5311
JMP @MR5312
STG @MR5312
JMP @MR5313
STG @MR5313
JMP @MR5314
STG @MR5314
@SET @MR5315             ; ***_Sub実行完了
CON
ANB @MR5315              ; ***_Sub実行完了
RES @MR5301              ; ***_Sub　実行中
CON
ENDS
;<h1/>05_5400 
STG @MR5400              ; ***_Sub
SET @MR5401              ; ***_Sub　実行中
CON
JMP @MR5402
STG @MR5402
JMP @MR5403
STG @MR5403
JMP @MR5404
STG @MR5404
JMP @MR5405
STG @MR5405
JMP @MR5406
STG @MR5406
JMP @MR5407
STG @MR5407
JMP @MR5408
STG @MR5408
JMP @MR5409
STG @MR5409
JMP @MR5410
STG @MR5410
JMP @MR5411
STG @MR5411
JMP @MR5412
STG @MR5412
JMP @MR5413
STG @MR5413
JMP @MR5414
STG @MR5414
@SET @MR5415             ; ***_Sub実行完了
CON
ANB @MR5415              ; ***_Sub実行完了
RES @MR5401              ; ***_Sub　実行中
CON
ENDS
;<h1/>06_5500
STG @MR5500              ; ***_Sub
SET @MR5501              ; ***_Sub　実行中
CON
JMP @MR5502
STG @MR5502
JMP @MR5503
STG @MR5503
JMP @MR5504
STG @MR5504
JMP @MR5505
STG @MR5505
JMP @MR5506
STG @MR5506
JMP @MR5507
STG @MR5507
JMP @MR5508
STG @MR5508
JMP @MR5509
STG @MR5509
JMP @MR5510
STG @MR5510
JMP @MR5511
STG @MR5511
JMP @MR5512
STG @MR5512
JMP @MR5513
STG @MR5513
JMP @MR5514
STG @MR5514
@SET @MR5515             ; ***_Sub実行完了
CON
ANB @MR5515              ; ***_Sub実行完了
RES @MR5501              ; ***_Sub　実行中
CON
ENDS
;<h1/>07_5600
STG @MR5600              ; ***_Sub
SET @MR5601              ; ***_Sub
CON
JMP @MR5602
STG @MR5602
JMP @MR5603
STG @MR5603
JMP @MR5604
STG @MR5604
JMP @MR5605
STG @MR5605
JMP @MR5606
STG @MR5606
JMP @MR5607
STG @MR5607
JMP @MR5608
STG @MR5608
JMP @MR5609
STG @MR5609
JMP @MR5610
STG @MR5610
JMP @MR5611
STG @MR5611
JMP @MR5612
STG @MR5612
JMP @MR5613
STG @MR5613
JMP @MR5614
STG @MR5614
@SET @MR5615             ; ***_Sub 実行完了
CON
ANB @MR5615              ; ***_Sub 実行完了
RES @MR5601              ; ***_Sub
CON
ENDS
;<h1/>08_5700_
STG @MR5700              ; Pause処理2_Sub_Start
SET @MR5702
CON
SET @MR1901              ; Main2 HALT許可
CON
JMP @MR5703
STG @MR5714
@SET @MR5701             ; Pause処理2_Sub_EXC
CON
ANB @MR5701              ; Pause処理2_Sub_EXC
RES @MR5702
CON
ENDS
END
ENDH
