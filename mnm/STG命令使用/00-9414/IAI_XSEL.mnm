DEVICE:53
;MODULE:IAI_XSEL
;MODULE_TYPE:1
;SCRIPT_TYPE:
;Emergency STOP
LD P4                    ; EMG_FLAG
ZRES @MR000 @MR915
;START
LD @CR2008
SET @MR000
;<h1/>RB Status Monitor
;System Error
LD CR2002                ; èÌéûON
MOV P0:#160 @DM1         ; RB_IN
LD<> @DM1 #0
OUT @MR014
;<h1/>Axis No.
LD CR2002                ; èÌéûON
MOV P3:#12 P1:#128       ; IF_Words  RB_OUT
;<h1/>RB MOVE OK FLAG
LD P0:#0                 ; RB_IN
AND P0:#1                ; RB_IN
AND P0:#32               ; RB_IN
AND P0:#64               ; RB_IN
OUT @MR001
;<h1/>Alarm routine
LD @MR014
ZRES @MR100 @MR915
CON
@SET @MR015
;<h1/>RB Status Check
STG @MR000
MPS
AND P2:#4                ; IF_Bits
RES P2:#0                ; IF_Bits
CON
DW #0 P3:#0              ; IF_Words
CON
SET P2:#1                ; IF_Bits
CON
JMP @MR100
MRD
AND P2:#5                ; IF_Bits
RES P2:#0                ; IF_Bits
CON
DW #0 P3:#0              ; IF_Words
CON
SET P2:#1                ; IF_Bits
CON
JMP @MR200
MRD
AND P2:#6                ; IF_Bits
RES P2:#0                ; IF_Bits
CON
DW #0 P3:#0              ; IF_Words
CON
SET P2:#1                ; IF_Bits
CON
JMP @MR300
MRD
AND P2:#7                ; IF_Bits
RES P2:#0                ; IF_Bits
CON
DW #0 P3:#0              ; IF_Words
CON
SET P2:#1                ; IF_Bits
CON
JMP @MR400
MRD
AND P2:#8                ; IF_Bits
RES P2:#0                ; IF_Bits
CON
DW #0 P3:#0              ; IF_Words
CON
SET P2:#1                ; IF_Bits
CON
JMP @MR500
MRD
AND P2:#9                ; IF_Bits
RES P2:#0                ; IF_Bits
CON
DW #0 P3:#0              ; IF_Words
CON
SET P2:#1                ; IF_Bits
CON
JMP @MR600
MRD
AND P2:#10               ; IF_Bits
RES P2:#0                ; IF_Bits
CON
DW #0 P3:#0              ; IF_Words
CON
SET P2:#1                ; IF_Bits
CON
JMP @MR700
MRD
AND P2:#11               ; IF_Bits
RES P2:#0                ; IF_Bits
CON
DW #0 P3:#0              ; IF_Words
CON
SET P2:#1                ; IF_Bits
CON
JMP @MR800
MPP
AND P2:#12               ; IF_Bits
RES P2:#0                ; IF_Bits
CON
DW #0 P3:#0              ; IF_Words
CON
SET P2:#1                ; IF_Bits
CON
JMP @MR900
;<h1/>04:HOME
STG @MR100
ZRES P1:#0 P1:#95        ; RB_OUT  RB_OUT
CON
JMP @MR101
STG @MR101
SET P1:#1                ; RB_OUT
CON
TMH @0 #100
CON
AND @T0
RES P1:#1                ; RB_OUT
CON
JMP @MR102
STG @MR102
MPS
ANB P2:#15               ; IF_Bits
JMP @MR103
MPP
TMR @1 #300
CON
AND @T1
JMP @MR103
STG @MR103
AND P2:#15               ; IF_Bits
TMH @2 #10
CON
AND @T2
JMP @MR104
STG @MR104
MPS
LD P0:#0                 ; RB_IN
AND P0:#1                ; RB_IN
ANL
JMP @MR105
MPP
TMR @3 #300
CON
AND @T3
DW #21 P3:#0             ; IF_Words
CON
JMP @MR109
STG @MR105
AND P0:#1                ; RB_IN
SET P1:#2                ; RB_OUT
CON
JMP @MR106
STG @MR106
AND P0:#15               ; RB_IN
JMP @MR107
STG @MR107
ANB P0:#15               ; RB_IN
RES P1:#2                ; RB_OUT
CON
JMP @MR108
STG @MR108
DW #20 P3:#0             ; IF_Words
CON
JMP @MR109
STG @MR109
RES P1:#2                ; RB_OUT
CON
RES P2:#4                ; IF_Bits
CON
JMP @MR015
;<h1/>05:POSMOVE
STG @MR200
ANB @MR014
MPS
AND @MR001
SET @MR206
CON
JMP @MR201
MPP
ANB @MR001
TMR @4 V0                ; TIME_OUT
CON
AND @T4
DW #22 P3:#0             ; IF_Words
CON
JMP @MR205
;P1:128 = P3:12	'Axis No.
;P1:144 = P3:13	'Position No.
;RES (@MR206)
LD @MR206
NCJ #1000
;P1:128 = P3:12	'Axis No.
;
LD CR2002                ; èÌéûON
MOV P3:#12 P1:#128       ; IF_Words  RB_OUT
;P1:144 = P3:13	'Position No.
;
LD CR2002                ; èÌéûON
MOV P3:#13 P1:#144       ; IF_Words  RB_OUT
;RES (@MR206)
LD CR2002                ; èÌéûON
RES @MR206
LABEL #1000
;
STG @MR201
ANB @MR014
ANB @MR206
MPS
AND>= P3:#13 #1          ; IF_Words
TMH @5 #10
CON
AND @T5
SET P1:#120              ; RB_OUT
CON
JMP @MR202
MPP
AND< P3:#13 #1           ; IF_Words
DW #23 P3:#0             ; IF_Words
CON
JMP @MR205
STG @MR202
ANB @MR014
MPS
LDB P0:#176              ; RB_IN
AND P0:#177              ; RB_IN
ANL
RES P1:#120              ; RB_OUT
CON
JMP @MR203
MPP
LD P0:#176               ; RB_IN
ORB P0:#177              ; RB_IN
ANL
TMR @6 V0                ; TIME_OUT
CON
AND @T6
RES P1:#120              ; RB_OUT
CON
DW #21 P3:#0             ; IF_Words
CON
JMP @MR205
STG @MR203
ANB @MR014
MPS
LD P0:#176               ; RB_IN
ANB P0:#177              ; RB_IN
ANL
JMP @MR204
MPP
LDB P0:#176              ; RB_IN
OR P0:#177               ; RB_IN
ANL
TMR @7 #300
CON
AND @T7
DW #21 P3:#0             ; IF_Words
CON
JMP @MR205
STG @MR204
ANB @MR014
DW #20 P3:#0             ; IF_Words
CON
JMP @MR205
STG @MR205
ANB @MR014
RES P1:#120              ; RB_OUT
CON
RES P2:#5                ; IF_Bits
CON
JMP @MR015
;<h1/>06:DIRMOVE(No use)
STG @MR300
MPS
LDB CR2002               ; èÌéûON
ANB @MR014
ANL
MPS
AND @MR001
SET @MR306
CON
JMP @MR301
MPP
ANB @MR001
TMR @8 V0                ; TIME_OUT
CON
AND @T8
DW #22 P3:#0             ; IF_Words
CON
JMP @MR305
MPP
AND CR2002               ; èÌéûON
DW #23 P3:#0             ; IF_Words
CON
JMP @MR305
;RES(@MR306)
LD @MR306
NCJ #1001
;RES(@MR306)
LD CR2002                ; èÌéûON
RES @MR306
LABEL #1001
;
STG @MR301
ANB @MR014
ANB @MR306
MPS
AND>= P3:#13 #1          ; IF_Words
TMH @9 #10
CON
AND @T9
SET P1:#121              ; RB_OUT
CON
JMP @MR302
MPP
AND< P3:#13 #1           ; IF_Words
DW #23 P3:#0             ; IF_Words
CON
JMP @MR305
STG @MR302
ANB @MR014
MPS
LDB P0:#176              ; RB_IN
AND P0:#177              ; RB_IN
ANL
RES P1:#121              ; RB_OUT
CON
JMP @MR303
MPP
LD P0:#176               ; RB_IN
ORB P0:#177              ; RB_IN
ANL
TMR @10 V0               ; TIME_OUT
CON
AND @T10
RES P1:#121              ; RB_OUT
CON
DW #21 P3:#0             ; IF_Words
CON
JMP @MR305
STG @MR303
ANB @MR014
MPS
LD P0:#176               ; RB_IN
ANB P0:#177              ; RB_IN
ANL
JMP @MR304
MPP
LDB P0:#176              ; RB_IN
OR P0:#177               ; RB_IN
ANL
TMR @11 #300
CON
AND @T11
DW #21 P3:#0             ; IF_Words
CON
JMP @MR305
STG @MR304
ANB @MR014
DW #20 P3:#0             ; IF_Words
CON
JMP @MR305
STG @MR305
ANB @MR014
RES P1:#121              ; RB_OUT
CON
RES P2:#6                ; IF_Bits
CON
JMP @MR015
;<h1/>07:JOG
STG @MR400
ANB @MR014
MPS
AND @MR001
JMP @MR401
MPP
ANB @MR001
TMR @12 V0               ; TIME_OUT
CON
AND @T12
DW #22 P3:#0             ; IF_Words
CON
JMP @MR405
STG @MR401
ANB @MR014
MPS
LD P0:#176               ; RB_IN
ANB P0:#177              ; RB_IN
ANL
MOV P3:#12 P1:#128       ; IF_Words  RB_OUT
RES P1:#118              ; RB_OUT
CON
JMP @MR402
MPP
LDB P0:#176              ; RB_IN
OR P0:#177               ; RB_IN
ANL
TMR @13 #300
CON
AND @T13
DW #22 P3:#0             ; IF_Words
CON
JMP @MR405
STG @MR402
ANB @MR014
MPS
AND P2:#7                ; IF_Bits
MPS
AND= P3:#11 #1           ; IF_Words
SET P1:#116              ; RB_OUT
CON
RES P1:#117              ; RB_OUT
MPP
AND<> P3:#11 #1          ; IF_Words
RES P1:#116              ; RB_OUT
CON
SET P1:#117              ; RB_OUT
MPP
ANB P2:#7                ; IF_Bits
RES P1:#116              ; RB_OUT
CON
RES P1:#117              ; RB_OUT
CON
JMP @MR403
STG @MR403
ANB @MR014
MPS
LD P0:#176               ; RB_IN
ANB P0:#177              ; RB_IN
ANL
JMP @MR404
MPP
LDB P0:#176              ; RB_IN
OR P0:#177               ; RB_IN
ANL
TMR @14 V0               ; TIME_OUT
CON
AND @T14
DW #22 P3:#0             ; IF_Words
CON
JMP @MR405
STG @MR404
ANB @MR014
DW #20 P3:#0             ; IF_Words
CON
JMP @MR405
STG @MR405
ANB @MR014
RES P1:#116              ; RB_OUT
CON
RES P1:#117              ; RB_OUT
CON
RES P1:#118              ; RB_OUT
CON
JMP @MR015
;<h1/>08:INCH
STG @MR500
ANB @MR014
MPS
AND @MR001
JMP @MR501
MPP
ANB @MR001
TMR @15 V0               ; TIME_OUT
CON
AND @T15
DW #22 P3:#0             ; IF_Words
CON
JMP @MR506
STG @MR501
ANB @MR014
MPS
LD P0:#176               ; RB_IN
ANB P0:#177              ; RB_IN
ANL
MOV P3:#12 P1:#128       ; IF_Words  RB_OUT
MPS
AND= P3:#10 #0           ; IF_Words
RES P1:#119              ; RB_OUT
MRD
AND<> P3:#10 #0          ; IF_Words
SET P1:#119              ; RB_OUT
MPP
SET P1:#118              ; RB_OUT
CON
JMP @MR502
MPP
LDB P0:#176              ; RB_IN
OR P0:#177               ; RB_IN
ANL
TMR @16 #300
CON
AND @T16
DW #22 P3:#0             ; IF_Words
CON
JMP @MR506
STG @MR502
ANB @MR014
MPS
AND= P3:#11 #1           ; IF_Words
SET P1:#116              ; RB_OUT
CON
RES P1:#117              ; RB_OUT
MRD
AND<> P3:#11 #1          ; IF_Words
RES P1:#116              ; RB_OUT
CON
SET P1:#117              ; RB_OUT
MPP
JMP @MR503
STG @MR503
ANB @MR014
MPS
LDB P0:#176              ; RB_IN
AND P0:#177              ; RB_IN
ANL
JMP @MR504
MPP
LD P0:#176               ; RB_IN
ORB P0:#177              ; RB_IN
ANL
TMR @17 V0               ; TIME_OUT
CON
AND @T17
DW #23 P3:#0             ; IF_Words
CON
JMP @MR506
STG @MR504
ANB @MR014
MPS
LD P0:#176               ; RB_IN
ANB P0:#177              ; RB_IN
ANL
RES P1:#116              ; RB_OUT
CON
RES P1:#117              ; RB_OUT
CON
RES P1:#118              ; RB_OUT
CON
JMP @MR505
MPP
LDB P0:#176              ; RB_IN
OR P0:#177               ; RB_IN
ANL
TMR @18 #300
CON
AND @T18
DW #22 P3:#0             ; IF_Words
CON
JMP @MR506
STG @MR505
ANB @MR014
DW #20 P3:#0             ; IF_Words
CON
JMP @MR506
STG @MR506
ANB @MR014
RES P1:#116              ; RB_OUT
CON
RES P1:#117              ; RB_OUT
CON
RES P1:#118              ; RB_OUT
CON
RES P1:#119              ; RB_OUT
CON
RES P2:#8                ; IF_Bits
CON
JMP @MR015
;<h1/>09:ARMRST
STG @MR600
SET P1:#1                ; RB_OUT
CON
TMR @19 V0               ; TIME_OUT
CON
AND @T19
JMP @MR601
STG @MR601
RES P1:#1                ; RB_OUT
CON
DW #20 P3:#0             ; IF_Words
CON
JMP @MR602
STG @MR602
RES P2:#9                ; IF_Bits
CON
JMP @MR015
;<h1/>10:SETPOSDATA
STG @MR700
ANB @MR014
MPS
AND @MR001
SET @MR706
CON
JMP @MR701
MPP
ANB @MR001
TMR @20 #300
CON
AND @T20
DW #22 P3:#0             ; IF_Words
CON
JMP @MR705
;P1:128 = P3:12		'Axis No.
;P1:144 = P3:13		'Position No.
;P1.L:160 = P3.L:14	'ç¿ïWíl
;RES (@MR706)
LD @MR706
NCJ #1002
;P1:128 = P3:12		'Axis No.
;
LD CR2002                ; èÌéûON
MOV P3:#12 P1:#128       ; IF_Words  RB_OUT
;P1:144 = P3:13		'Position No.
;
LD CR2002                ; èÌéûON
MOV P3:#13 P1:#144       ; IF_Words  RB_OUT
;P1.L:160 = P3.L:14	'ç¿ïWíl
;
LD CR2002                ; èÌéûON
MOV.L P3:#14 P1:#160     ; IF_Words  RB_OUT
;RES (@MR706)
LD CR2002                ; èÌéûON
RES @MR706
LABEL #1002
;
STG @MR701
ANB @MR014
ANB @MR706
MPS
AND>= P3:#13 #1          ; IF_Words
TMH @21 #10
CON
AND @T21
SET P1:#115              ; RB_OUT
CON
JMP @MR702
MPP
AND< P3:#13 #1           ; IF_Words
DW #23 P3:#0             ; IF_Words
CON
JMP @MR705
STG @MR702
ANB @MR014
MPS
LDB P0:#176              ; RB_IN
AND P0:#177              ; RB_IN
ANL
RES P1:#115              ; RB_OUT
CON
JMP @MR703
MPP
LD P0:#176               ; RB_IN
ORB P0:#177              ; RB_IN
ANL
TMR @22 V0               ; TIME_OUT
CON
AND @T22
RES P1:#115              ; RB_OUT
CON
DW #21 P3:#0             ; IF_Words
CON
JMP @MR705
STG @MR703
ANB @MR014
MPS
LD P0:#176               ; RB_IN
ANB P0:#177              ; RB_IN
ANL
JMP @MR704
MPP
LDB P0:#176              ; RB_IN
OR P0:#177               ; RB_IN
ANL
TMR @23 #300
CON
AND @T23
DW #21 P3:#0             ; IF_Words
CON
JMP @MR705
STG @MR704
ANB @MR014
DW #20 P3:#0             ; IF_Words
CON
JMP @MR705
STG @MR705
ANB @MR014
RES P2:#10               ; IF_Bits
CON
JMP @MR015
;<h1/>11:GETPOSDATA
STG @MR800
ANB @MR014
MPS
AND @MR001
SET @MR806
CON
JMP @MR801
MPP
ANB @MR001
TMR @24 #300
CON
AND @T24
DW #22 P3:#0             ; IF_Words
CON
JMP @MR805
;P1:128 = P3:12		'Axis No.
;P1:144 = P3:13		'Position No.
;RES (@MR806)
LD @MR806
NCJ #1003
;P1:128 = P3:12		'Axis No.
;
LD CR2002                ; èÌéûON
MOV P3:#12 P1:#128       ; IF_Words  RB_OUT
;P1:144 = P3:13		'Position No.
;
LD CR2002                ; èÌéûON
MOV P3:#13 P1:#144       ; IF_Words  RB_OUT
;RES (@MR806)
LD CR2002                ; èÌéûON
RES @MR806
LABEL #1003
;
STG @MR801
ANB @MR014
ANB @MR806
MPS
AND>= P3:#13 #1          ; IF_Words
TMH @25 #10
CON
AND @T25
SET P1:#114              ; RB_OUT
CON
JMP @MR802
MPP
AND< P3:#13 #1           ; IF_Words
DW #23 P3:#0             ; IF_Words
CON
JMP @MR805
STG @MR802
ANB @MR014
MPS
LDB P0:#176              ; RB_IN
AND P0:#177              ; RB_IN
ANL
RES P1:#114              ; RB_OUT
CON
JMP @MR803
MPP
LD P0:#176               ; RB_IN
ORB P0:#177              ; RB_IN
ANL
TMR @26 V0               ; TIME_OUT
CON
AND @T26
RES P1:#114              ; RB_OUT
CON
DW #22 P3:#0             ; IF_Words
CON
JMP @MR805
STG @MR803
ANB @MR014
MPS
LD P0:#176               ; RB_IN
ANB P0:#177              ; RB_IN
ANL
JMP @MR804
MPP
LDB P0:#176              ; RB_IN
OR P0:#177               ; RB_IN
ANL
TMR @27 #300
CON
AND @T27
DW #21 P3:#0             ; IF_Words
CON
JMP @MR805
STG @MR804
ANB @MR014
DW #20 P3:#0             ; IF_Words
CON
JMP @MR805
STG @MR805
ANB @MR014
RES P2:#11               ; IF_Bits
CON
JMP @MR015
;<h1/>12:SETALLPOSDATA
STG @MR900
MPS
LDB CR2002               ; èÌéûON
ANB @MR014
ANL
MPS
AND @MR001
DW #0 @DM2
CON
JMP @MR901
MPP
ANB @MR001
TMR @28 #300
CON
AND @T28
DW #22 P3:#0             ; IF_Words
CON
JMP @MR907
MPP
AND CR2002               ; èÌéûON
DW #23 P3:#0             ; IF_Words
CON
JMP @MR907
STG @MR901
SET @MR908
CON
JMP @MR902
;@DM2 = @DM2 + 1		'Count up
;
;P1:128 = P3:12		'Axis No.
;P1:144 = @DM2		'Position No.
;
;@DM3 = (P3:12 - 1) * 100 + @DM2
;@DM4 = (@DM3 - 1) * 2
;P1.L:160 =P5.L:@DM4 
;
;RES (@MR908)
LD @MR908
NCJ #1004
;@DM2 = @DM2 + 1		'Count up
;
LD CR2002                ; èÌéûON
LDA @DM2
CON
EXT
CON
ADD.L +1
CON
STA @DM2
;P1:128 = P3:12		'Axis No.
;
LD CR2002                ; èÌéûON
MOV P3:#12 P1:#128       ; IF_Words  RB_OUT
;P1:144 = @DM2		'Position No.
;
LD CR2002                ; èÌéûON
MOV @DM2 P1:#144         ; RB_OUT
;@DM3 = (P3:12 - 1) * 100 + @DM2
;
LD CR2002                ; èÌéûON
LDA P3:#12               ; IF_Words
CON
EXT
CON
SUB.L +1
CON
MUL.L +100
CON
STA.L @VM0
CON
LDA @DM2
CON
EXT
CON
ADD.L @VM0
CON
STA @DM3
;@DM4 = (@DM3 - 1) * 2
;
LD CR2002                ; èÌéûON
LDA @DM3
CON
EXT
CON
SUB.L +1
CON
MUL.L +2
CON
STA @DM4
;P1.L:160 =P5.L:@DM4 
;
LD CR2002                ; èÌéûON
LDA @DM4
CON
EXT
CON
STA.L Z12
CON
MOV.L P5:Z12 P1:#160     ; POINT_DATA  RB_OUT
;RES (@MR908)
LD CR2002                ; èÌéûON
RES @MR908
LABEL #1004
;
STG @MR902
ANB @MR014
ANB @MR908
MPS
AND>= P3:#13 #1          ; IF_Words
TMH @29 #10
CON
AND @T29
SET P1:#115              ; RB_OUT
CON
JMP @MR903
MPP
AND< P3:#13 #1           ; IF_Words
DW #23 P3:#0             ; IF_Words
CON
JMP @MR907
STG @MR903
ANB @MR014
MPS
LDB P0:#176              ; RB_IN
AND P0:#177              ; RB_IN
ANL
RES P1:#115              ; RB_OUT
CON
JMP @MR904
MPP
LD P0:#176               ; RB_IN
ORB P0:#177              ; RB_IN
ANL
TMR @30 V0               ; TIME_OUT
CON
AND @T30
RES P1:#115              ; RB_OUT
CON
DW #22 P3:#0             ; IF_Words
CON
JMP @MR907
STG @MR904
ANB @MR014
MPS
LD P0:#176               ; RB_IN
ANB P0:#177              ; RB_IN
ANL
JMP @MR905
MPP
LDB P0:#176              ; RB_IN
OR P0:#177               ; RB_IN
ANL
TMR @31 #300
CON
AND @T31
DW #21 P3:#0             ; IF_Words
CON
JMP @MR907
STG @MR905
MPS
AND< @DM2 #50
JMP @MR901
MPP
AND>= @DM2 #50
JMP @MR906
STG @MR906
ANB @MR014
DW #20 P3:#0             ; IF_Words
CON
JMP @MR907
STG @MR907
ANB @MR014
RES P2:#12               ; IF_Bits
CON
JMP @MR015
;èIóπèàóù/End Process
STG @MR015
SET P2:#0                ; IF_Bits
CON
RES P2:#1                ; IF_Bits
CON
JMP @MR000
LD P2:#3                 ; IF_Bits
OR P4                    ; EMG_FLAG
ZRES P1:#0 P1:#207       ; RB_OUT  RB_OUT
CON
ZRES P2:#0 P2:#2         ; IF_Bits  IF_Bits
CON
ZRES P2:#4 P2:#15        ; IF_Bits  IF_Bits
CON
ZRES @MR000 @MR915
LD P2:#3                 ; IF_Bits
OR P4                    ; EMG_FLAG
MEND
END
ENDH
