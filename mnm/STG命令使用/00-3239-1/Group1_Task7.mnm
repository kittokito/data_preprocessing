DEVICE:53
;MODULE:Group1_Task7
;MODULE_TYPE:0
;SCRIPT_TYPE:
;OneSystem Main-Module
;
;-----------------------------------------
;ModuleName	:	Group1_Task7
;ModuleType	:	Main Module
;Line		:	
;Cell		:	
;Function	:	
;-----------------------------------------
;<<Task LocalDevice>>
;/*項目			/*割付ｴﾘｱ				/*備考
;---------------------------------------------------------------------			
;Emergency		@MR000〜@MR015			Emergency処理時RESET禁止ｴﾘｱ
;Free			@MR100〜@MR915			ﾕｰｻﾞｰﾌﾘｰｴﾘｱ
;HOME			@MR1000〜@MR1515		HOME動作時使用ｴﾘｱ
;MAINTENANCE		@MR2000〜@MR2915		MAINTE動作時使用ｴﾘｱ
;AUTO(Main1)		@MR3000〜@MR3915		AUTO(Main1)動作時使用ｴﾘｱ
;	(Main2)		@MR4000〜@MR4915		AUTO(Main2)動作時使用ｴﾘｱ
;SubRoutine		@MR4500〜@MR6415		ｻﾌﾞﾙｰﾁﾝ共通動作使用ｴﾘｱ
;----------------------------------------------------------------------
;<h1/>Device_Init/ﾃﾞﾊﾞｲｽ初期化
;[内容]
;・非常停止、優先ｴﾗｰ発生時に初期化したいﾃﾞﾊﾞｲｽを指定して下さい
;※本Taskで使用するﾛｰｶﾙﾃﾞﾊﾞｲｽなど
;※STG〜JMPにて使用しているﾃﾞﾊﾞｲｽは必須
LDP R46104               ; _非常停止中　ﾓｰﾄﾞﾌﾗｸﾞ
ZRES @MR100 @MR6415      ; Task7 ERROR
;<h1/>Task_Monitor/ﾀｽｸﾓﾆﾀｰ
LD CR2002                ; 常時ON
FLIK #50 #50 @MR000
;ON STG Main1
;TYPE EM656.U,EM657.U,@MR000.U,@MR3000.U
;
;FOR EM656 = EM656 TO 160 STEP 16
;	IF @MR3000:EM656 <> 0 THEN
;		BREAK
;	END IF	
;NEXT
;	
;IF EM656 < 160 THEN
;	EM657 = (EM656 / 16) * 100 + DMX(@MR3000:EM656) + #3000
;END IF		
;		
;EM656 = EM656 + 16		
;IF EM656 > 160 THEN		
;	EM656 = 0		
;END IF
LDP @MR000
NCJ #1000
;TYPE EM656.U,EM657.U,@MR000.U,@MR3000.U
;
;FOR EM656 = EM656 TO 160 STEP 16
;
LD CR2002                ; 常時ON
MOV EM656 EM656          ; Task7 Main1@MR  Task7 Main1@MR
LABEL #2000
LD> EM656 #160           ; Task7 Main1@MR
CJ #2001
;	IF @MR3000:EM656 <> 0 THEN
;
LD CR2002                ; 常時ON
LDA EM656                ; Task7 Main1@MR
CON
EXT
CON
STA.L Z12
LD<> @MR3000:Z12 #0      ; AUTO Main1
NCJ #2002
;		BREAK
;
LD CR2002                ; 常時ON
CJ #2003
;	END IF	
;
LABEL #2002
;NEXT
;
LD CR2002                ; 常時ON
LDA EM656                ; Task7 Main1@MR
CON
ADD #16
CON
STA EM656                ; Task7 Main1@MR
LDB CR2009               ; 演算結果が負
CJ #2000
LABEL #2003
LABEL #2001
;IF EM656 < 160 THEN
;
LD< EM656 #160           ; Task7 Main1@MR
NCJ #2004
;	EM657 = (EM656 / 16) * 100 + DMX(@MR3000:EM656) + #3000
;
LD CR2002                ; 常時ON
LDA EM656                ; Task7 Main1@MR
CON
EXT
CON
STA.L Z12
CON
LDA @MR3000:Z12          ; AUTO Main1
CON
DMX
CON
STA @VM0
CON
LDA EM656                ; Task7 Main1@MR
CON
EXT
CON
EXT.L
CON
DIV.L +16
CON
MUL.L +100
CON
STA.L @VM1
CON
LDA @VM0
CON
EXT
CON
ADD.L @VM1
CON
ADD.L +3000
CON
STA EM657                ; Task7 Main1@MR
;END IF		
;
LABEL #2004
;EM656 = EM656 + 16		
;
LD CR2002                ; 常時ON
LDA EM656                ; Task7 Main1@MR
CON
EXT
CON
ADD.L +16
CON
STA EM656                ; Task7 Main1@MR
;IF EM656 > 160 THEN		
;
LD> EM656 #160           ; Task7 Main1@MR
NCJ #2005
;	EM656 = 0		
;
LD CR2002                ; 常時ON
MOV #0 EM656             ; Task7 Main1@MR
;END IF
LABEL #2005
LABEL #1000
;
;ON STG Main2
;TYPE EM658.U,EM659.U,@MR4000.U
;
;FOR EM658 = EM658 TO 80 STEP 16
;	IF @MR4000:EM658 <> 0 THEN
;		BREAK
;	END IF	
;NEXT	
;
;IF EM658 < 80 THEN
;	EM659 = (EM658 / 16) * 100 + DMX(@MR4000:EM658) + #4000
;END IF
;
;EM658 = EM658 + 16		
;
;IF EM658 > 80 THEN
;	EM658 = 0	
;END IF
LDP @MR000
NCJ #1001
;TYPE EM658.U,EM659.U,@MR4000.U
;
;FOR EM658 = EM658 TO 80 STEP 16
;
LD CR2002                ; 常時ON
MOV EM658 EM658          ; Task7 Main2@MR  Task7 Main2@MR
LABEL #2006
LD> EM658 #80            ; Task7 Main2@MR
CJ #2007
;	IF @MR4000:EM658 <> 0 THEN
;
LD CR2002                ; 常時ON
LDA EM658                ; Task7 Main2@MR
CON
EXT
CON
STA.L Z12
LD<> @MR4000:Z12 #0      ; AUTO Main2
NCJ #2008
;		BREAK
;
LD CR2002                ; 常時ON
CJ #2009
;	END IF	
;
LABEL #2008
;NEXT	
;
LD CR2002                ; 常時ON
LDA EM658                ; Task7 Main2@MR
CON
ADD #16
CON
STA EM658                ; Task7 Main2@MR
LDB CR2009               ; 演算結果が負
CJ #2006
LABEL #2009
LABEL #2007
;IF EM658 < 80 THEN
;
LD< EM658 #80            ; Task7 Main2@MR
NCJ #2010
;	EM659 = (EM658 / 16) * 100 + DMX(@MR4000:EM658) + #4000
;
LD CR2002                ; 常時ON
LDA EM658                ; Task7 Main2@MR
CON
EXT
CON
STA.L Z12
CON
LDA @MR4000:Z12          ; AUTO Main2
CON
DMX
CON
STA @VM3
CON
LDA EM658                ; Task7 Main2@MR
CON
EXT
CON
EXT.L
CON
DIV.L +16
CON
MUL.L +100
CON
STA.L @VM4
CON
LDA @VM3
CON
EXT
CON
ADD.L @VM4
CON
ADD.L +4000
CON
STA EM659                ; Task7 Main2@MR
;END IF
;
LABEL #2010
;EM658 = EM658 + 16		
;
LD CR2002                ; 常時ON
LDA EM658                ; Task7 Main2@MR
CON
EXT
CON
ADD.L +16
CON
STA EM658                ; Task7 Main2@MR
;IF EM658 > 80 THEN
;
LD> EM658 #80            ; Task7 Main2@MR
NCJ #2011
;	EM658 = 0	
;
LD CR2002                ; 常時ON
MOV #0 EM658             ; Task7 Main2@MR
;END IF
LABEL #2011
LABEL #1001
;
;ON STG SubRoutine
;TYPE EM660.U,EM661.U,@MR4500.U
;	
;FOR EM660 = EM660 TO 320 STEP 16
;	IF @MR4500:EM660 <> 0 THEN
;		BREAK
;	END IF	
;NEXT
;		
;IF EM660 < 320 THEN
;	EM661 = (EM660 / 16) * 100 + DMX(@MR4500:EM660) + #4500
;END IF
;		
;EM660 = EM660 + 16	
;
;IF EM660 > 320 THEN
;   EM660 = 0	
;END IF
LDP @MR000
NCJ #1002
;TYPE EM660.U,EM661.U,@MR4500.U
;
;FOR EM660 = EM660 TO 320 STEP 16
;
LD CR2002                ; 常時ON
MOV EM660 EM660          ; Task7 Sub@MR  Task7 Sub@MR
LABEL #2012
LD> EM660 #320           ; Task7 Sub@MR
CJ #2013
;	IF @MR4500:EM660 <> 0 THEN
;
LD CR2002                ; 常時ON
LDA EM660                ; Task7 Sub@MR
CON
EXT
CON
STA.L Z12
LD<> @MR4500:Z12 #0
NCJ #2014
;		BREAK
;
LD CR2002                ; 常時ON
CJ #2015
;	END IF	
;
LABEL #2014
;NEXT
;
LD CR2002                ; 常時ON
LDA EM660                ; Task7 Sub@MR
CON
ADD #16
CON
STA EM660                ; Task7 Sub@MR
LDB CR2009               ; 演算結果が負
CJ #2012
LABEL #2015
LABEL #2013
;IF EM660 < 320 THEN
;
LD< EM660 #320           ; Task7 Sub@MR
NCJ #2016
;	EM661 = (EM660 / 16) * 100 + DMX(@MR4500:EM660) + #4500
;
LD CR2002                ; 常時ON
LDA EM660                ; Task7 Sub@MR
CON
EXT
CON
STA.L Z12
CON
LDA @MR4500:Z12
CON
DMX
CON
STA @VM6
CON
LDA EM660                ; Task7 Sub@MR
CON
EXT
CON
EXT.L
CON
DIV.L +16
CON
MUL.L +100
CON
STA.L @VM7
CON
LDA @VM6
CON
EXT
CON
ADD.L @VM7
CON
ADD.L +4500
CON
STA EM661                ; Task7 Sub@MR
;END IF
;
LABEL #2016
;EM660 = EM660 + 16	
;
LD CR2002                ; 常時ON
LDA EM660                ; Task7 Sub@MR
CON
EXT
CON
ADD.L +16
CON
STA EM660                ; Task7 Sub@MR
;IF EM660 > 320 THEN
;
LD> EM660 #320           ; Task7 Sub@MR
NCJ #2017
;   EM660 = 0	
;
LD CR2002                ; 常時ON
MOV #0 EM660             ; Task7 Sub@MR
;END IF
LABEL #2017
LABEL #1002
;
;<h1/>Task_Init/ﾀｽｸ初期化
;[本STG内容]
;・本Task起動時に必要な初期化処理を記述して下さい
;・起動Taskの全Init処理終了後、Task_StartのSTGが起動します
STG LR807                ; _Grp1_Task7_Init.STG
ENDS
;<h1/>Task_Start/ﾀｽｸ開始
;[本STG内容]
;・Task起動後、以下運転ﾓｰﾄﾞに従い、各STGにJMPします
;【HOME】	→	LR5200
;【AUTO】	→	LR5400
;【MAINTE】	→	LR5600
;・本STGは追記、修正不要です
STG LR407                ; _Grp1_Task7_Start.STG
MPS
AND R46101               ; _原点復帰中　ﾓｰﾄﾞﾌﾗｸﾞ
JMP LR5207               ; _Grp1_Task7_HOME.STG
MRD
AND R46100               ; _自動運転中　ﾓｰﾄﾞﾌﾗｸﾞ
JMP LR5407               ; _Grp1_Task7_AUTO.STG
MPP
AND R46102               ; _ﾒﾝﾃﾅﾝｽ運転中　ﾓｰﾄﾞﾌﾗｸﾞ
JMP LR5607               ; _Grp1_Task7_MAINTE.STG
;<h1/>Task_Finish/ﾀｽｸ終了
;[本STG内容]
;・各Taskの終了STGになります
;・運転ﾓｰﾄﾞに係わらず終了時は本STGを経由して終了して下さい
;・本STGは追記、修正不要です
STG LR607                ; _Grp1_Task7_Fin.STG
RES R41007               ; _Grp1_Task7_起動中ﾌﾗｸﾞ
CON
ENDS
;<h1/>HOME/原点復帰
;[本STG内容]
;・STG @MR1000の続きから各Taskの原点復帰動作を記述する
;・動作終了時は@MR1515にJMPする事
STG LR5207               ; _Grp1_Task7_HOME.STG
JMP @MR1000              ; HOME
STG @MR1000              ; HOME
JMP @MR1515              ; HOME END
STG @MR1515              ; HOME END
JMP LR607                ; _Grp1_Task7_Fin.STG
;<h1/>AUTO/自動動作
STG LR5407               ; _Grp1_Task7_AUTO.STG
JMP @MR3000              ; AUTO Main1
;<h1/>Auto-Main1/Autoﾒｲﾝﾙｰﾁﾝ1
;[本STG内容]
;・各TaskのAUTO動作を記述して下さい
;・動作ﾓｰﾄﾞは「AUTOAC」に格納されています(1〜32)
;・@MR3000:AUTO_Main1開始、@MR3001:AUTO_Main1完了、@MR3002:AUTO_Main1動作中
STG @MR3000              ; AUTO Main1
JMP @MR3003
STG @MR3003
JMP @MR3915              ; AUTO END
;Auto終了処理
STG @MR3900
AND @MR4001              ; Main2 END
RES @MR4001              ; Main2 END
CON
JMP @MR3915              ; AUTO END
STG @MR3915              ; AUTO END
JMP LR607                ; _Grp1_Task7_Fin.STG
;<h1/>Auto-Main2/Autoﾒｲﾝﾙｰﾁﾝ2
;[本STG内容]
;・@MR4000の起動はMain1にて行う事
;・@MR4000:AUTO_Main2開始、@MR4001:AUTO_Main2完了、@MR4002:AUTO_Main2動作中
STG @MR4000              ; AUTO Main2
SET @MR4002              ; Main2 Busy
CON
JMP @MR4003
STG @MR4003
JMP @MR4415              ; Main2 END
STG @MR4415              ; Main2 END
SET @MR4001              ; Main2 END
CON
RES @MR4002              ; Main2 Busy
CON
ENDS
;<h1/>MAINTE/ﾒﾝﾃﾅﾝｽ動作
;[本STG内容]
;・各TaskのMAINTE動作を記述して下さい
;・動作ﾓｰﾄﾞは「MAINTEAC*」に格納されています(1〜32)
;・動作終了時は@MR2915にJMPして下さい
STG LR5607               ; _Grp1_Task7_MAINTE.STG
JMP @MR2000              ; Mainte
STG @MR2000              ; Mainte
JMP @MR2915              ; Mainte END
STG @MR2915              ; Mainte END
JMP LR607                ; _Grp1_Task7_Fin.STG
;<h1/>ERROR
;//*Error Sample
;[使用方法]
;・@DM1にERROR番号を代入
;・@DM2にSensor番号を代入(センサ無しエラーの場合は0)
;・@DM9に復帰SW番号(1〜9、0はSW無し)をdegit単位で4桁入力
;・Task0 ERROR SET(@MR100)でエラー処理開始
;・エラー復帰でTask0 ERROR END(@MR101)がON
;・押下復帰SW番号により左から対応した@MR105,@MR106,@MR107,@MR108のいずれかがON
;・上記ONが成立したらJMPするSTGに対応する処理を記述
;Error0を左側から1,2,3,4の番号に対応した復帰選択SWを出力する
;Error Sample *//
;MyTask Error Process Substance/エラー処理実体
STG @MR100               ; Task7 ERROR
ANB R39002               ; ERROR_DISP Busy
MPS
ZRES @MR105 @MR108       ; SW1  SW4
CON
LDA @DM9                 ; ReturnSW /ERROR_DISP
CON
TBCD
CON
STA @DM10
CON
DISN @DM10 @DM3 #4
MRD
DW #7 @DM0               ; TaskNo /ERROR_DISP
CON
BMOV @DM0 DM60000 #7     ; TaskNo /ERROR_DISP  TaskNo /ERROR_DISP
MPP
SET R39000               ; ERROR_DISP Start
CON
SET @MR102               ; Task7 ERROR Busy
CON
JMP @MR103
STG @MR103
AND R39002               ; ERROR_DISP Busy
AND= DM60008 @DM1        ; ReturnNo /ERROR_DISP  ErrorNo /ERROR_DISP
MPS
AND= DM60007 @DM6        ; ReturnSW /ERROR_DISP
SET @MR105               ; SW1
CON
JMP @MR104
MRD
AND= DM60007 @DM5        ; ReturnSW /ERROR_DISP
SET @MR106               ; SW2
CON
JMP @MR104
MRD
AND= DM60007 @DM4        ; ReturnSW /ERROR_DISP
SET @MR107               ; SW3
CON
JMP @MR104
MPP
AND= DM60007 @DM3        ; ReturnSW /ERROR_DISP
SET @MR108               ; SW4
CON
JMP @MR104
STG @MR104
ANB R39002               ; ERROR_DISP Busy
RES @MR102               ; Task7 ERROR Busy
CON
SET @MR101               ; Task7 ERROR_End
CON
ENDS
;<h1/>SELECT_ACT
;//*Select_ACT Sample
;画面番号33をブザー有りで選択SW番号を左から#5,#10,#0(無し),#34の並びで表示する
STG @MR4104
ANB R39204               ; SELECT_ACT Interlock
SET R39204               ; SELECT_ACT Interlock
CON
MPS
DW #33 @DM31             ; ScreenNo /SELECT_ACT
CON
DW #1 @DM32              ; Bz_Use /SELECT_ACT
CON
DW #5 @DM33              ; SW1_No /SELECT_ACT
CON
DW #10 @DM34             ; SW2_No /SELECT_ACT
CON
DW #0 @DM35              ; SW3_No /SELECT_ACT
CON
DW #34 @DM36             ; SW4_No /SELECT_ACT
MPP
SET @MR200               ; Task7 SELECT_ACT
CON
JMP @MR4105
STG @MR4105
AND @MR201               ; Task7 SEL_ACT END
RES @MR201               ; Task7 SEL_ACT END
CON
RES R39204               ; SELECT_ACT Interlock
CON
MPS
AND @MR205               ; SW1
JMP @MR4106
MRD
AND @MR206               ; SW2
JMP @MR4107
MRD
AND @MR207               ; SW3
JMP @MR4108
MPP
AND @MR208               ; SW4
JMP @MR4109
;Select_ACT Sample *//
;MyTask Select_ACT Process Substance/SELECT_ACT処理実体
STG @MR200               ; Task7 SELECT_ACT
ANB R39202               ; SELECT_ACT Busy
MPS
ZRES @MR205 @MR208       ; SW1  SW4
CON
DW #7 @DM30              ; TaskNo /SELECT_ACT
CON
BMOV @DM30 DM60030 #7    ; TaskNo /SELECT_ACT  TaskNo /SELECT_ACT
MPP
SET R39200               ; SELECT_ACT Start
CON
SET @MR202               ; Task7 SEL_ACT Busy
CON
JMP @MR203
STG @MR203
AND R39202               ; SELECT_ACT Busy
AND<> DM60037 #0         ; SelectSW /SELECT_ACT
MPS
AND= DM60037 #1          ; SelectSW /SELECT_ACT
SET @MR205               ; SW1
CON
JMP @MR204
MRD
AND= DM60037 #2          ; SelectSW /SELECT_ACT
SET @MR206               ; SW2
CON
JMP @MR204
MRD
AND= DM60037 #3          ; SelectSW /SELECT_ACT
SET @MR207               ; SW3
CON
JMP @MR204
MPP
AND= DM60037 #4          ; SelectSW /SELECT_ACT
SET @MR208               ; SW4
CON
JMP @MR204
STG @MR204
ANB R39202               ; SELECT_ACT Busy
RES @MR202               ; Task7 SEL_ACT Busy
CON
SET @MR201               ; Task7 SEL_ACT END
CON
ENDS
;<h1/>SELECT_Y_N
;//*Select_Y_N Sample
STG @MR4203
ANB R39104               ; SELECT_Y_N Interlock
SET R39104               ; SELECT_Y_N Interlock
CON
DW #7 @DM21              ; ScreenNo /SELECT_Y_N
CON
DW #0 @DM22              ; Bz_Use /SELECT_Y_N
CON
SET @MR300               ; Task7 SELECT_Y_N
CON
JMP @MR4204
STG @MR4204
AND @MR301               ; Task7 Y/N END
RES @MR301               ; Task7 Y/N END
CON
RES R39104               ; SELECT_Y_N Interlock
CON
MPS
AND @MR306               ; Task7 Y/N
JMP @MR4205
MPP
ANB @MR306               ; Task7 Y/N
JMP @MR4206
;*Select_Y_N Sample//
;MyTask Select_Y_N Process Substance/SELECT_Y_N処理実体
STG @MR300               ; Task7 SELECT_Y_N
ANB R39102               ; SELECT_Y_N Busy
MPS
ZRES @MR306 @MR307       ; Task7 Y/N
CON
DW #7 @DM20              ; TaskNo /SELECT_Y_N
CON
BMOV @DM20 DM60020 #3    ; TaskNo /SELECT_Y_N  TaskNo /SELECT_Y_N
MPP
SET R39100               ; SELECT_Y_N Start
CON
SET @MR302               ; Task7 Y_N Busy
CON
JMP @MR303
STG @MR303
AND R39102               ; SELECT_Y_N Busy
MPS
AND= DM60023 #1          ; Y_N /SELECT_Y_N
SET @MR306               ; Task7 Y/N
CON
JMP @MR304
MPP
AND= DM60023 #2          ; Y_N /SELECT_Y_N
RES @MR306               ; Task7 Y/N
CON
JMP @MR304
STG @MR304
ANB R39102               ; SELECT_Y_N Busy
RES @MR302               ; Task7 Y_N Busy
CON
SET @MR301               ; Task7 Y/N END
CON
ENDS
;<h1/>TIMEUP_ERROR
;//*TIMEUP_ERROR Sample
;サンプルセンサ:MR5000=ON AND MR5001 = OFF のいずれかが5sタイムアップしたらTIMEUP_ERROR出力
;エラー復帰後、再度センサ確認
STG @MR4208
MPS
LD MR5000                ; 上段ﾄﾚｲｶﾞｲﾄﾞ前限(左)Err
ANB MR5001               ; 上段ﾄﾚｲｶﾞｲﾄﾞ後限(左)Err
ANL
JMP @MR4215
MPP
LDB MR5000               ; 上段ﾄﾚｲｶﾞｲﾄﾞ前限(左)Err
OR MR5001                ; 上段ﾄﾚｲｶﾞｲﾄﾞ後限(左)Err
ANL
TMR @0 #50
CON
AND @T0
JMP @MR4209
STG @MR4209
ANB R39304               ; TIMEUP_ERR Interlock
SET R39304               ; TIMEUP_ERR Interlock
CON
DW #16 @DM41             ; SensorNo /TIMEUP_ERR
CON
SET @MR400               ; Task7 TIMEUP_ERR
CON
JMP @MR4210
STG @MR4210
AND @MR401               ; Task7 TIMEUP_END
RES R39304               ; TIMEUP_ERR Interlock
CON
RES @MR401               ; Task7 TIMEUP_END
CON
JMP @MR4208
;TIMEUP_ERROR Sample *//
;MyTask TIMEUP_ERROR Process Substance/TIMEUP_ERROR処理実体
STG @MR400               ; Task7 TIMEUP_ERR
ANB R39302               ; TIMEUP_ERR Busy
MPS
DW #7 @DM40              ; TaskNo /TIMEUP_ERR
CON
BMOV @DM40 DM60040 #2    ; TaskNo /TIMEUP_ERR  TaskNo /TIMEUP_ERR
MPP
SET R39300               ; TIMEUP_ERR Start
CON
SET @MR402               ; Task7 TIMEUP Busy
CON
JMP @MR403
STG @MR403
AND R39302               ; TIMEUP_ERR Busy
JMP @MR404
STG @MR404
ANB R39302               ; TIMEUP_ERR Busy
RES @MR402               ; Task7 TIMEUP Busy
CON
SET @MR401               ; Task7 TIMEUP_END
CON
ENDS
;<h1/>SubRoutines/ｻﾌﾞﾙｰﾁﾝ
;[記述方法]
;・ｻﾌﾞﾙｰﾁﾝは本ﾌﾞｯｸﾏｰｸから下に記述していって下さい
;・ｻﾌﾞﾙｰﾁﾝは必ずﾌﾞｯｸﾏｰｸを挿入して処理内容を明確にする事
;<h1/>HALT
LD R41207                ; CELL間 TASK7 PAUSE要求
AND @MR1900              ; Main1 HALT許可
LD @MR1901               ; Main2 HALT許可
ORB @MR4002              ; Main2 Busy
ANL
TMR @2 #2
CON
AND @T2
@SET R42607              ; _Grp1_Task7_ﾎﾟｰｽﾞ許可
LD R42607                ; _Grp1_Task7_ﾎﾟｰｽﾞ許可
RES @MR1900              ; Main1 HALT許可
CON
RES @MR1901              ; Main2 HALT許可
END
ENDH
